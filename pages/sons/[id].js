import Head from 'next/head'
import styles from '../../styles/Home.module.css';
import sons from '../../styles/sons.module.css';
import title from '../../styles/title.module.css';
import Arrow from '../../components/svg/arrow';
import Link from 'next/link';
import Image from 'next/image';
import Replay from '../../components/svg/replay';
import SonIcon from '../../components/svg/son';
import Script from '../script/scriptMenu';
import WaitCount from '../script/waitCount';
import { motion } from 'framer-motion'
import { launchMusic, stopMusic, retour, stopQuitMusic, openSon, chargeMusic } from '../script/musicPlayer';
import MusicPlayer from '../script/musicPlayer';
import { useRouter } from 'next/router';
import { useState, useEffect } from "react";

export default function Son() {
    const router = useRouter()
    const { id } = router.query
    const [listSon, setSons] = useState([])
    const [nameSon, setName] = useState([])
    async function fetchPosts() {
        const reference = id;
        const request = await fetch(`${process.env.HOSTNAME}requestList.php?f=list`);
        const data = await request.json();
        // setSons(Object.entries(data)[0][1][reference]['sons']);
        // setName(Object.entries(data)[0][1][reference]['name']);
        setSons(data[reference]['sons']);
        setName(data[reference]['name']);
    }

    const myLoader = ({ src, width, quality }) => {
        return `${src}?w=${width}&q=${quality || 75}`
    }

    const myLocalLoader = ({ src, width, quality }) => {
        return `${process.env.ENV_URL}${src}?w=${width}&q=${quality || 75}`
    }

    useEffect(() => {
        if(router.isReady) {
            fetchPosts();
        }
        router.events.on('routeChangeComplete', () => {
            stopQuitMusic()
        })
        return () => {
            router.events.off('routeChangeComplete', () => {
            })
        };
    }, [router.isReady]);
    // const titre = nameCollection;
    const variants = {
        hidden: { opacity: 0, x: 200, y: 0 },
        enter: { opacity: 1, x: 0, y: 0 },
        exit: { opacity: 0, x: -200, y: 0 },
    }
    const variants2 = {
        hidden: { opacity: 0, x: 0, y: -100 },
        enter: { opacity: 1, x: 0, y: 0 },
        exit: { opacity: 1, x: 0, y: +100 },
    }
    return (
        <div className={styles.container}>
            <Head>
                <title>Son dans la collection</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <div className={sons.global}>
                    <div className={title.global}>
                        <div className={`${title.subGlobal} ${styles.displayFlex}`}>
                            <div className={title.barre}></div>
                            <motion.div                                 
                                initial="hidden"
                                animate="enter"
                                exit="exit"
                                variants={variants2}
                                transition={{ type: 'linear' }}
                                className={title.title}>{nameSon}</motion.div>
                        </div>
                    </div>
                    <motion.div
                        initial="hidden"
                        animate="enter"
                        exit="exit"
                        transition={{ type: 'linear' }}
                        variants={variants}
                        className={`${sons.subGlobal} ${styles.displayFlex}`}>
                        {listSon.map((collectionSon, index) => (
                            <div id={`player`+index} key={index} className={`${sons.playerGlobal}`}>
                                <div className={sons.playerSubGlobal}>
                                    <div className={sons.globalDisplay}>
                                        <div id={`bigPlayGlobal` + index} className={`${sons.playerLaunch}`}onClick={() => launchMusic(process.env.HOST_FILES +collectionSon.url, index)} >
                                            <div id={`bigPlay` + index} className={`${sons.play}`}>
                                                <Image loader={myLocalLoader} width={67} height={80} src={'icon/bigplay.svg'} alt={'Gros bouton play'}/>
                                            </div>
                                        </div>
                                        <Image loader={myLoader} src={process.env.HOST_FILES + collectionSon.img} width={700} height={700} alt={collectionSon.desc}/>
                                    </div>
                                    <div className={sons.playerButton}>
                                        <div className={sons.progressPlayer}>
                                            <div className={sons.playerProgressBar}></div>
                                            <div className={sons.playerProgressButton}></div>
                                        </div>
                                        <div className={sons.actualTime}></div>
                                        <div className={sons.totalTime}></div>
                                        <div className={`${sons.actionsPlayer} ${styles.displayFlex}`}>
                                            <div className={`${sons.backPlayer} ${sons.buttonEffect}`} onClick={() => retour(index)}><Replay/></div>
                                            <div id={`play` + index} urlofson={process.env.HOST_FILES +collectionSon.url} onLoad={() => chargeMusic(process.env.HOST_FILES +collectionSon.url, index)} onClick={() => launchMusic(process.env.HOST_FILES +collectionSon.url, index)} className={`${sons.playPlayer} ${sons.buttonEffect}`}><Image loader={myLocalLoader} width={23} height={27} src={'icon/start.svg'} alt={'Petit bouton play'}/></div>
                                            <div id={`pause` + index} onClick={() => stopMusic()} className={`${sons.pausePlayer} ${sons.buttonEffect} toggle`}><Image loader={myLocalLoader} width={23} height={27} src={'icon/pause.svg'} alt={'Bouton pause'}/></div>
                                            <div onClick={() => openSon(index)} className={`${sons.puissancePlayer}`}>
                                                <div className={`${sons.puissanceIcon} ${sons.buttonEffect}`}><SonIcon/></div>
                                                <div className={sons.puissanceGlobal}>
                                                    <div className={sons.puissancePlayerBg}>
                                                        <div className={sons.playerPuissanceBar}></div>
                                                        <div className={sons.playerPuissanceButton}></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div className={sons.description}>
                                    <div className={sons.titre}>{collectionSon.name}</div>
                                    <div className={sons.desc}>{collectionSon.desc}</div>
                                    <div className={sons.subDesc}>{collectionSon.subDesc}</div>
                                    <div className={sons.cote}>{collectionSon.cote}</div>
                                    <div className={sons.prov}>{collectionSon.provenance}</div>
                                </div>
                            </div>
                        ))}
                    </motion.div>
                    <Link passHref href={'/menu?referer=son'}>
                        <div className={`${sons.retour} ${styles.displayFlex} ${styles.buttonScale}`}><Arrow/></div>
                    </Link>
                    <div className={sons.progressBar}>
                        <div className={sons.progress}></div>
                    </div>
                </div>
                <MusicPlayer/>
                <Script/>
                <WaitCount/>
            </main>
        </div>
    )
}